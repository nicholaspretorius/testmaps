version: "3.7"

services:
  users:
    build:
      context: ./services/users
      dockerfile: Dockerfile
    entrypoint: ["/usr/src/app/entrypoint.sh"]
    volumes:
      - ./services/users:/usr/src/app
    ports:
      - 5001:5000
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgresql://postgres:postgres@users-db:5432/users_dev
      - DATABASE_TEST_URL=postgresql://postgres:postgres@users-db:5432/users_test
      - SECRET_KEY=test
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
      - AUTH0_CLIENT_TEST_ID=${AUTH0_CLIENT_TEST_ID}
      - AUTH0_SECRET=${AUTH0_SECRET}
    depends_on:
      - users-db
  users-db:
    build:
      context: ./services/users/project/db
      dockerfile: Dockerfile
    expose:
      - 5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  client:
    build:
      context: ./services/client
      dockerfile: Dockerfile
    volumes:
      - "./services/client:/usr/src/app"
      - "/usr/src/app/node_modules"
    ports:
      - 3007:3000
    environment:
      - NODE_ENV=development
      - REACT_APP_USERS_SERVICE_URL=${REACT_APP_USERS_SERVICE_URL}
      - REACT_APP_AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - REACT_APP_API_AUDIENCE=${AUTH0_AUDIENCE}
      - REACT_APP_AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
      - REACT_APP_DOMAIN=${REACT_APP_DOMAIN}
    depends_on:
      - users
  cypress:
    build:
      context: ./services/client
      dockerfile: Dockerfile-cypress
    depends_on:
      - client
    network_mode: "host"
